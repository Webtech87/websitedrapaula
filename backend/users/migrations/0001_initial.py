# Generated by Django 5.1.5 on 2025-04-04 08:45

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(help_text='Required. Must be a valid email address.', max_length=254, unique=True, verbose_name='email address')),
                ('full_name', models.CharField(max_length=150, verbose_name='full name')),
                ('phone', models.CharField(help_text='International format (e.g. +12125552368)', max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='phone number')),
                ('accept_terms', models.BooleanField(default=False, help_text='Designates whether the user accepted terms and conditions.', verbose_name='terms accepted')),
                ('terms_accepted_at', models.DateTimeField(blank=True, help_text='When the user accepted the terms and conditions.', null=True, verbose_name='terms accepted at')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='birthday')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('PNS', 'Prefer not to say'), ('', 'Unspecified')], default='', max_length=5, verbose_name='gender')),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True, verbose_name='country')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user can log in.', verbose_name='active')),
                ('is_verified', models.BooleanField(default=False, help_text='Designates whether the user has verified their email.', verbose_name='verified')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='customuser_groups', related_query_name='customuser', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_permissions', related_query_name='customuser', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['-date_joined'],
            },
        ),
        migrations.CreateModel(
            name='BusinessUser',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('company_name', models.CharField(max_length=100, verbose_name='company name')),
                ('tax_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='tax ID')),
                ('company_website', models.URLField(blank=True, null=True, verbose_name='company website')),
                ('company_size', models.CharField(blank=True, choices=[('1-10', '1-10 employees'), ('11-50', '11-50 employees'), ('51-200', '51-200 employees'), ('201-500', '201-500 employees'), ('501+', '501+ employees')], max_length=20, null=True, verbose_name='company size')),
            ],
            options={
                'verbose_name': 'Business User',
                'verbose_name_plural': 'Business Users',
            },
            bases=('users.customuser',),
        ),
        migrations.CreateModel(
            name='NoteToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=300, verbose_name='description')),
                ('token', models.CharField(max_length=100, unique=True, verbose_name='token')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='expires at')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='note_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Note Token',
                'verbose_name_plural': 'Note Tokens',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=500, null=True, verbose_name='biography')),
                ('website', models.URLField(blank=True, null=True, verbose_name='website')),
                ('language', models.CharField(default='en', max_length=10, verbose_name='preferred language')),
                ('timezone', models.CharField(default='UTC', max_length=50, verbose_name='timezone')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='avatar')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='userprofile', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['email'], name='users_custo_email_c80f75_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['is_active'], name='users_custo_is_acti_1b62ea_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['accept_terms'], name='users_custo_accept__5d03f8_idx'),
        ),
    ]
